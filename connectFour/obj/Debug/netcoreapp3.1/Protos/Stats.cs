// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/stats.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace grpc4InRowService.Protos {

  /// <summary>Holder for reflection information generated from Protos/stats.proto</summary>
  public static partial class StatsReflection {

    #region Descriptor
    /// <summary>File descriptor for Protos/stats.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static StatsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChJQcm90b3Mvc3RhdHMucHJvdG8iKAoMU3RhdHNSZXF1ZXN0EgsKA2lkMRgB",
            "IAEoBRILCgNpZDIYAiABKAUiVQoJVXNlclN0YXRzEgoKAmlkGAEgASgFEhAK",
            "CHVzZXJuYW1lGAIgASgJEg0KBWdhbWVzGAMgASgFEgwKBHdpbnMYBCABKAUS",
            "DQoFc2NvcmUYBSABKAUimwEKCUdhbWVTdGF0cxILCgNpZDEYASABKAUSDQoF",
            "dXNlcjEYAiABKAkSDgoGc2NvcmUxGAMgASgFEgsKA2lkMhgEIAEoBRINCgV1",
            "c2VyMhgFIAEoCRIOCgZzY29yZTIYBiABKAUSDgoGd2lubmVyGAcgASgJEhcK",
            "BGRhdGUYCCABKAsyCS5EYXRlVGltZRINCgVtb3ZlcxgJIAEoBSJSCghEYXRl",
            "VGltZRIMCgRob3VyGAEgASgFEg4KBm1pbnV0ZRgCIAEoBRILCgNkYXkYAyAB",
            "KAUSDQoFbW9udGgYBCABKAUSDAoEeWVhchgFIAEoBTL9AQoKU3RhdGlzdGlj",
            "cxIvChBnZXRBbGxVc2Vyc1N0YXRzEg0uU3RhdHNSZXF1ZXN0GgouVXNlclN0",
            "YXRzMAESLgoPZ2V0RmluaXNlZEdhbWVzEg0uU3RhdHNSZXF1ZXN0GgouR2Ft",
            "ZVN0YXRzMAESLgoPZ2V0T25nb2luZ0dhbWVzEg0uU3RhdHNSZXF1ZXN0Ggou",
            "R2FtZVN0YXRzMAESKQoMZ2V0VXNlclN0YXRzEg0uU3RhdHNSZXF1ZXN0Ggou",
            "VXNlclN0YXRzEjMKFGdldFVzZXJzSW50ZXJzZWN0aW9uEg0uU3RhdHNSZXF1",
            "ZXN0GgouR2FtZVN0YXRzMAFCG6oCGGdycGM0SW5Sb3dTZXJ2aWNlLlByb3Rv",
            "c2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::grpc4InRowService.Protos.StatsRequest), global::grpc4InRowService.Protos.StatsRequest.Parser, new[]{ "Id1", "Id2" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::grpc4InRowService.Protos.UserStats), global::grpc4InRowService.Protos.UserStats.Parser, new[]{ "Id", "Username", "Games", "Wins", "Score" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::grpc4InRowService.Protos.GameStats), global::grpc4InRowService.Protos.GameStats.Parser, new[]{ "Id1", "User1", "Score1", "Id2", "User2", "Score2", "Winner", "Date", "Moves" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::grpc4InRowService.Protos.DateTime), global::grpc4InRowService.Protos.DateTime.Parser, new[]{ "Hour", "Minute", "Day", "Month", "Year" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class StatsRequest : pb::IMessage<StatsRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StatsRequest> _parser = new pb::MessageParser<StatsRequest>(() => new StatsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StatsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::grpc4InRowService.Protos.StatsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StatsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StatsRequest(StatsRequest other) : this() {
      id1_ = other.id1_;
      id2_ = other.id2_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StatsRequest Clone() {
      return new StatsRequest(this);
    }

    /// <summary>Field number for the "id1" field.</summary>
    public const int Id1FieldNumber = 1;
    private int id1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id1 {
      get { return id1_; }
      set {
        id1_ = value;
      }
    }

    /// <summary>Field number for the "id2" field.</summary>
    public const int Id2FieldNumber = 2;
    private int id2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id2 {
      get { return id2_; }
      set {
        id2_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StatsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StatsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id1 != other.Id1) return false;
      if (Id2 != other.Id2) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id1 != 0) hash ^= Id1.GetHashCode();
      if (Id2 != 0) hash ^= Id2.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id1 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id1);
      }
      if (Id2 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Id2);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id1 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id1);
      }
      if (Id2 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Id2);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id1);
      }
      if (Id2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id2);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StatsRequest other) {
      if (other == null) {
        return;
      }
      if (other.Id1 != 0) {
        Id1 = other.Id1;
      }
      if (other.Id2 != 0) {
        Id2 = other.Id2;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id1 = input.ReadInt32();
            break;
          }
          case 16: {
            Id2 = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id1 = input.ReadInt32();
            break;
          }
          case 16: {
            Id2 = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class UserStats : pb::IMessage<UserStats>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserStats> _parser = new pb::MessageParser<UserStats>(() => new UserStats());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserStats> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::grpc4InRowService.Protos.StatsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserStats() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserStats(UserStats other) : this() {
      id_ = other.id_;
      username_ = other.username_;
      games_ = other.games_;
      wins_ = other.wins_;
      score_ = other.score_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserStats Clone() {
      return new UserStats(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 2;
    private string username_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "games" field.</summary>
    public const int GamesFieldNumber = 3;
    private int games_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Games {
      get { return games_; }
      set {
        games_ = value;
      }
    }

    /// <summary>Field number for the "wins" field.</summary>
    public const int WinsFieldNumber = 4;
    private int wins_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Wins {
      get { return wins_; }
      set {
        wins_ = value;
      }
    }

    /// <summary>Field number for the "score" field.</summary>
    public const int ScoreFieldNumber = 5;
    private int score_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Score {
      get { return score_; }
      set {
        score_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserStats);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserStats other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Username != other.Username) return false;
      if (Games != other.Games) return false;
      if (Wins != other.Wins) return false;
      if (Score != other.Score) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      if (Games != 0) hash ^= Games.GetHashCode();
      if (Wins != 0) hash ^= Wins.GetHashCode();
      if (Score != 0) hash ^= Score.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Username.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Username);
      }
      if (Games != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Games);
      }
      if (Wins != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Wins);
      }
      if (Score != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Score);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Username.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Username);
      }
      if (Games != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Games);
      }
      if (Wins != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Wins);
      }
      if (Score != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Score);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (Games != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Games);
      }
      if (Wins != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Wins);
      }
      if (Score != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Score);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserStats other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      if (other.Games != 0) {
        Games = other.Games;
      }
      if (other.Wins != 0) {
        Wins = other.Wins;
      }
      if (other.Score != 0) {
        Score = other.Score;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Username = input.ReadString();
            break;
          }
          case 24: {
            Games = input.ReadInt32();
            break;
          }
          case 32: {
            Wins = input.ReadInt32();
            break;
          }
          case 40: {
            Score = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Username = input.ReadString();
            break;
          }
          case 24: {
            Games = input.ReadInt32();
            break;
          }
          case 32: {
            Wins = input.ReadInt32();
            break;
          }
          case 40: {
            Score = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GameStats : pb::IMessage<GameStats>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GameStats> _parser = new pb::MessageParser<GameStats>(() => new GameStats());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GameStats> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::grpc4InRowService.Protos.StatsReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameStats() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameStats(GameStats other) : this() {
      id1_ = other.id1_;
      user1_ = other.user1_;
      score1_ = other.score1_;
      id2_ = other.id2_;
      user2_ = other.user2_;
      score2_ = other.score2_;
      winner_ = other.winner_;
      date_ = other.date_ != null ? other.date_.Clone() : null;
      moves_ = other.moves_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameStats Clone() {
      return new GameStats(this);
    }

    /// <summary>Field number for the "id1" field.</summary>
    public const int Id1FieldNumber = 1;
    private int id1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id1 {
      get { return id1_; }
      set {
        id1_ = value;
      }
    }

    /// <summary>Field number for the "user1" field.</summary>
    public const int User1FieldNumber = 2;
    private string user1_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string User1 {
      get { return user1_; }
      set {
        user1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "score1" field.</summary>
    public const int Score1FieldNumber = 3;
    private int score1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Score1 {
      get { return score1_; }
      set {
        score1_ = value;
      }
    }

    /// <summary>Field number for the "id2" field.</summary>
    public const int Id2FieldNumber = 4;
    private int id2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id2 {
      get { return id2_; }
      set {
        id2_ = value;
      }
    }

    /// <summary>Field number for the "user2" field.</summary>
    public const int User2FieldNumber = 5;
    private string user2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string User2 {
      get { return user2_; }
      set {
        user2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "score2" field.</summary>
    public const int Score2FieldNumber = 6;
    private int score2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Score2 {
      get { return score2_; }
      set {
        score2_ = value;
      }
    }

    /// <summary>Field number for the "winner" field.</summary>
    public const int WinnerFieldNumber = 7;
    private string winner_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Winner {
      get { return winner_; }
      set {
        winner_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "date" field.</summary>
    public const int DateFieldNumber = 8;
    private global::grpc4InRowService.Protos.DateTime date_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::grpc4InRowService.Protos.DateTime Date {
      get { return date_; }
      set {
        date_ = value;
      }
    }

    /// <summary>Field number for the "moves" field.</summary>
    public const int MovesFieldNumber = 9;
    private int moves_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Moves {
      get { return moves_; }
      set {
        moves_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GameStats);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GameStats other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id1 != other.Id1) return false;
      if (User1 != other.User1) return false;
      if (Score1 != other.Score1) return false;
      if (Id2 != other.Id2) return false;
      if (User2 != other.User2) return false;
      if (Score2 != other.Score2) return false;
      if (Winner != other.Winner) return false;
      if (!object.Equals(Date, other.Date)) return false;
      if (Moves != other.Moves) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id1 != 0) hash ^= Id1.GetHashCode();
      if (User1.Length != 0) hash ^= User1.GetHashCode();
      if (Score1 != 0) hash ^= Score1.GetHashCode();
      if (Id2 != 0) hash ^= Id2.GetHashCode();
      if (User2.Length != 0) hash ^= User2.GetHashCode();
      if (Score2 != 0) hash ^= Score2.GetHashCode();
      if (Winner.Length != 0) hash ^= Winner.GetHashCode();
      if (date_ != null) hash ^= Date.GetHashCode();
      if (Moves != 0) hash ^= Moves.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id1 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id1);
      }
      if (User1.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(User1);
      }
      if (Score1 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Score1);
      }
      if (Id2 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Id2);
      }
      if (User2.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(User2);
      }
      if (Score2 != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Score2);
      }
      if (Winner.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Winner);
      }
      if (date_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Date);
      }
      if (Moves != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(Moves);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id1 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id1);
      }
      if (User1.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(User1);
      }
      if (Score1 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Score1);
      }
      if (Id2 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Id2);
      }
      if (User2.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(User2);
      }
      if (Score2 != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Score2);
      }
      if (Winner.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Winner);
      }
      if (date_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Date);
      }
      if (Moves != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(Moves);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id1);
      }
      if (User1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(User1);
      }
      if (Score1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Score1);
      }
      if (Id2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id2);
      }
      if (User2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(User2);
      }
      if (Score2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Score2);
      }
      if (Winner.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Winner);
      }
      if (date_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Date);
      }
      if (Moves != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Moves);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GameStats other) {
      if (other == null) {
        return;
      }
      if (other.Id1 != 0) {
        Id1 = other.Id1;
      }
      if (other.User1.Length != 0) {
        User1 = other.User1;
      }
      if (other.Score1 != 0) {
        Score1 = other.Score1;
      }
      if (other.Id2 != 0) {
        Id2 = other.Id2;
      }
      if (other.User2.Length != 0) {
        User2 = other.User2;
      }
      if (other.Score2 != 0) {
        Score2 = other.Score2;
      }
      if (other.Winner.Length != 0) {
        Winner = other.Winner;
      }
      if (other.date_ != null) {
        if (date_ == null) {
          Date = new global::grpc4InRowService.Protos.DateTime();
        }
        Date.MergeFrom(other.Date);
      }
      if (other.Moves != 0) {
        Moves = other.Moves;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id1 = input.ReadInt32();
            break;
          }
          case 18: {
            User1 = input.ReadString();
            break;
          }
          case 24: {
            Score1 = input.ReadInt32();
            break;
          }
          case 32: {
            Id2 = input.ReadInt32();
            break;
          }
          case 42: {
            User2 = input.ReadString();
            break;
          }
          case 48: {
            Score2 = input.ReadInt32();
            break;
          }
          case 58: {
            Winner = input.ReadString();
            break;
          }
          case 66: {
            if (date_ == null) {
              Date = new global::grpc4InRowService.Protos.DateTime();
            }
            input.ReadMessage(Date);
            break;
          }
          case 72: {
            Moves = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id1 = input.ReadInt32();
            break;
          }
          case 18: {
            User1 = input.ReadString();
            break;
          }
          case 24: {
            Score1 = input.ReadInt32();
            break;
          }
          case 32: {
            Id2 = input.ReadInt32();
            break;
          }
          case 42: {
            User2 = input.ReadString();
            break;
          }
          case 48: {
            Score2 = input.ReadInt32();
            break;
          }
          case 58: {
            Winner = input.ReadString();
            break;
          }
          case 66: {
            if (date_ == null) {
              Date = new global::grpc4InRowService.Protos.DateTime();
            }
            input.ReadMessage(Date);
            break;
          }
          case 72: {
            Moves = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DateTime : pb::IMessage<DateTime>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DateTime> _parser = new pb::MessageParser<DateTime>(() => new DateTime());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DateTime> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::grpc4InRowService.Protos.StatsReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DateTime() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DateTime(DateTime other) : this() {
      hour_ = other.hour_;
      minute_ = other.minute_;
      day_ = other.day_;
      month_ = other.month_;
      year_ = other.year_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DateTime Clone() {
      return new DateTime(this);
    }

    /// <summary>Field number for the "hour" field.</summary>
    public const int HourFieldNumber = 1;
    private int hour_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Hour {
      get { return hour_; }
      set {
        hour_ = value;
      }
    }

    /// <summary>Field number for the "minute" field.</summary>
    public const int MinuteFieldNumber = 2;
    private int minute_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Minute {
      get { return minute_; }
      set {
        minute_ = value;
      }
    }

    /// <summary>Field number for the "day" field.</summary>
    public const int DayFieldNumber = 3;
    private int day_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Day {
      get { return day_; }
      set {
        day_ = value;
      }
    }

    /// <summary>Field number for the "month" field.</summary>
    public const int MonthFieldNumber = 4;
    private int month_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Month {
      get { return month_; }
      set {
        month_ = value;
      }
    }

    /// <summary>Field number for the "year" field.</summary>
    public const int YearFieldNumber = 5;
    private int year_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Year {
      get { return year_; }
      set {
        year_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DateTime);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DateTime other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Hour != other.Hour) return false;
      if (Minute != other.Minute) return false;
      if (Day != other.Day) return false;
      if (Month != other.Month) return false;
      if (Year != other.Year) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Hour != 0) hash ^= Hour.GetHashCode();
      if (Minute != 0) hash ^= Minute.GetHashCode();
      if (Day != 0) hash ^= Day.GetHashCode();
      if (Month != 0) hash ^= Month.GetHashCode();
      if (Year != 0) hash ^= Year.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Hour != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Hour);
      }
      if (Minute != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Minute);
      }
      if (Day != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Day);
      }
      if (Month != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Month);
      }
      if (Year != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Year);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Hour != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Hour);
      }
      if (Minute != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Minute);
      }
      if (Day != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Day);
      }
      if (Month != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Month);
      }
      if (Year != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Year);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Hour != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Hour);
      }
      if (Minute != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Minute);
      }
      if (Day != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Day);
      }
      if (Month != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Month);
      }
      if (Year != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Year);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DateTime other) {
      if (other == null) {
        return;
      }
      if (other.Hour != 0) {
        Hour = other.Hour;
      }
      if (other.Minute != 0) {
        Minute = other.Minute;
      }
      if (other.Day != 0) {
        Day = other.Day;
      }
      if (other.Month != 0) {
        Month = other.Month;
      }
      if (other.Year != 0) {
        Year = other.Year;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Hour = input.ReadInt32();
            break;
          }
          case 16: {
            Minute = input.ReadInt32();
            break;
          }
          case 24: {
            Day = input.ReadInt32();
            break;
          }
          case 32: {
            Month = input.ReadInt32();
            break;
          }
          case 40: {
            Year = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Hour = input.ReadInt32();
            break;
          }
          case 16: {
            Minute = input.ReadInt32();
            break;
          }
          case 24: {
            Day = input.ReadInt32();
            break;
          }
          case 32: {
            Month = input.ReadInt32();
            break;
          }
          case 40: {
            Year = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
